import './App.svelte.css.proxy.js';
/* src/App.svelte generated by Svelte v3.44.2 */
import {
	SvelteComponent,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	space,
	transition_in,
	transition_out
} from "../_snowpack/pkg/svelte/internal.js";

import Canvas from './Canvas.svelte.js';
import BottomNav from './BottomNav.svelte.js';
import TopNav from './TopNav.svelte.js';

function create_fragment(ctx) {
	let topnav;
	let t0;
	let div;
	let canvas;
	let t1;
	let bottomnav;
	let current;
	topnav = new TopNav({});
	canvas = new Canvas({});
	bottomnav = new BottomNav({});

	return {
		c() {
			create_component(topnav.$$.fragment);
			t0 = space();
			div = element("div");
			create_component(canvas.$$.fragment);
			t1 = space();
			create_component(bottomnav.$$.fragment);
			attr(div, "class", "svelte-1h45d87");
		},
		m(target, anchor) {
			mount_component(topnav, target, anchor);
			insert(target, t0, anchor);
			insert(target, div, anchor);
			mount_component(canvas, div, null);
			append(div, t1);
			mount_component(bottomnav, div, null);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(topnav.$$.fragment, local);
			transition_in(canvas.$$.fragment, local);
			transition_in(bottomnav.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(topnav.$$.fragment, local);
			transition_out(canvas.$$.fragment, local);
			transition_out(bottomnav.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(topnav, detaching);
			if (detaching) detach(t0);
			if (detaching) detach(div);
			destroy_component(canvas);
			destroy_component(bottomnav);
		}
	};
}

class App extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default App;